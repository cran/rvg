// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// DOCX_
bool DOCX_(std::string file, std::string bg_, double width, double height, int pointsize, Rcpp::List aliases, bool editable, int id, std::string raster_prefix, int next_rels_id, int standalone);
RcppExport SEXP rvg_DOCX_(SEXP fileSEXP, SEXP bg_SEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP pointsizeSEXP, SEXP aliasesSEXP, SEXP editableSEXP, SEXP idSEXP, SEXP raster_prefixSEXP, SEXP next_rels_idSEXP, SEXP standaloneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type bg_(bg_SEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type pointsize(pointsizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type aliases(aliasesSEXP);
    Rcpp::traits::input_parameter< bool >::type editable(editableSEXP);
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< std::string >::type raster_prefix(raster_prefixSEXP);
    Rcpp::traits::input_parameter< int >::type next_rels_id(next_rels_idSEXP);
    Rcpp::traits::input_parameter< int >::type standalone(standaloneSEXP);
    rcpp_result_gen = Rcpp::wrap(DOCX_(file, bg_, width, height, pointsize, aliases, editable, id, raster_prefix, next_rels_id, standalone));
    return rcpp_result_gen;
END_RCPP
}
// DSVG_
bool DSVG_(std::string file, double width, double height, std::string bg, int pointsize, bool standalone, int canvas_id, Rcpp::List aliases);
RcppExport SEXP rvg_DSVG_(SEXP fileSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP bgSEXP, SEXP pointsizeSEXP, SEXP standaloneSEXP, SEXP canvas_idSEXP, SEXP aliasesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< std::string >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< int >::type pointsize(pointsizeSEXP);
    Rcpp::traits::input_parameter< bool >::type standalone(standaloneSEXP);
    Rcpp::traits::input_parameter< int >::type canvas_id(canvas_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type aliases(aliasesSEXP);
    rcpp_result_gen = Rcpp::wrap(DSVG_(file, width, height, bg, pointsize, standalone, canvas_id, aliases));
    return rcpp_result_gen;
END_RCPP
}
// set_tracer_on
bool set_tracer_on(int dn);
RcppExport SEXP rvg_set_tracer_on(SEXP dnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dn(dnSEXP);
    rcpp_result_gen = Rcpp::wrap(set_tracer_on(dn));
    return rcpp_result_gen;
END_RCPP
}
// set_tracer_off
bool set_tracer_off(int dn);
RcppExport SEXP rvg_set_tracer_off(SEXP dnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dn(dnSEXP);
    rcpp_result_gen = Rcpp::wrap(set_tracer_off(dn));
    return rcpp_result_gen;
END_RCPP
}
// collect_id
Rcpp::IntegerVector collect_id(int dn);
RcppExport SEXP rvg_collect_id(SEXP dnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dn(dnSEXP);
    rcpp_result_gen = Rcpp::wrap(collect_id(dn));
    return rcpp_result_gen;
END_RCPP
}
// add_attribute
bool add_attribute(int dn, Rcpp::IntegerVector id, std::vector< std::string > str, std::string name);
RcppExport SEXP rvg_add_attribute(SEXP dnSEXP, SEXP idSEXP, SEXP strSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dn(dnSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type str(strSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(add_attribute(dn, id, str, name));
    return rcpp_result_gen;
END_RCPP
}
// PPTX_
bool PPTX_(std::string file, std::string bg_, double width, double height, double offx, double offy, int pointsize, Rcpp::List aliases, bool editable, int id, std::string raster_prefix, int next_rels_id, int standalone);
RcppExport SEXP rvg_PPTX_(SEXP fileSEXP, SEXP bg_SEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP offxSEXP, SEXP offySEXP, SEXP pointsizeSEXP, SEXP aliasesSEXP, SEXP editableSEXP, SEXP idSEXP, SEXP raster_prefixSEXP, SEXP next_rels_idSEXP, SEXP standaloneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type bg_(bg_SEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< double >::type offx(offxSEXP);
    Rcpp::traits::input_parameter< double >::type offy(offySEXP);
    Rcpp::traits::input_parameter< int >::type pointsize(pointsizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type aliases(aliasesSEXP);
    Rcpp::traits::input_parameter< bool >::type editable(editableSEXP);
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< std::string >::type raster_prefix(raster_prefixSEXP);
    Rcpp::traits::input_parameter< int >::type next_rels_id(next_rels_idSEXP);
    Rcpp::traits::input_parameter< int >::type standalone(standaloneSEXP);
    rcpp_result_gen = Rcpp::wrap(PPTX_(file, bg_, width, height, offx, offy, pointsize, aliases, editable, id, raster_prefix, next_rels_id, standalone));
    return rcpp_result_gen;
END_RCPP
}
// XLSX_
bool XLSX_(std::string file, std::string bg_, double width, double height, double offx, double offy, int pointsize, Rcpp::List aliases, bool editable, int id, std::string raster_prefix, int next_rels_id, int standalone);
RcppExport SEXP rvg_XLSX_(SEXP fileSEXP, SEXP bg_SEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP offxSEXP, SEXP offySEXP, SEXP pointsizeSEXP, SEXP aliasesSEXP, SEXP editableSEXP, SEXP idSEXP, SEXP raster_prefixSEXP, SEXP next_rels_idSEXP, SEXP standaloneSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type bg_(bg_SEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< double >::type offx(offxSEXP);
    Rcpp::traits::input_parameter< double >::type offy(offySEXP);
    Rcpp::traits::input_parameter< int >::type pointsize(pointsizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type aliases(aliasesSEXP);
    Rcpp::traits::input_parameter< bool >::type editable(editableSEXP);
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< std::string >::type raster_prefix(raster_prefixSEXP);
    Rcpp::traits::input_parameter< int >::type next_rels_id(next_rels_idSEXP);
    Rcpp::traits::input_parameter< int >::type standalone(standaloneSEXP);
    rcpp_result_gen = Rcpp::wrap(XLSX_(file, bg_, width, height, offx, offy, pointsize, aliases, editable, id, raster_prefix, next_rels_id, standalone));
    return rcpp_result_gen;
END_RCPP
}
